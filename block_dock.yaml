openapi: 3.0.1
info:
  title: Block api
  version: 2.0.0
servers:
- url: http://{host}:{port}/{basePath}
  description: The production API server
  variables:
    host:
      enum:
        - '87.103.198.150'
        - '192.168.10.3'
        - 'localhost'
        - '192.192.56.1'
      default: '192.168.10.3'
      # default: '192.192.56.1'
    port:
      enum:
        - '48001'
        - '8001'
        - '8000'
      default: '8001'
      # default: '8000'
    basePath:
      enum:
        - "api/v1/json"
      default: "api/v1/json"

paths:
  /?method=tags_info:
    get:
      description: Получаем список тэгов по 
      parameters:
        - name: tag
          in: query
          schema:
            type: integer
            description: Имя 
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
  /?method=check_point:
    get:
      description: Получаем список тэгов по 
      parameters:
        - name: x
          in: query
          description: X - координата 
          schema:
            type: number
            format: double
        - name: y
          in: query
          description: Y - координата  
          schema:
            type: number
            format: double
        - name: z
          in: query
          description: Z - координата  
          schema:
            type: number
            format: double
        - name: all
          in: query
          description: Все входящие блоки, если не используется, то выдет первые входящие блоки  
          schema:
            type: string
            # format: double
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/CheckPoint'
  /?method=check_point_UE:
    get:
      description: Проверяем точку 
      parameters:
        - name: x
          in: query
          description: X - координата 
          schema:
            type: number
            format: double
        - name: y
          in: query
          description: Y - координата  
          schema:
            type: number
            format: double
        - name: z
          in: query
          description: Z - координата  
          schema:
            type: number
            format: double
        - name: all
          in: query
          description: Все входящие блоки, если не используется, то выдет первые входящие блоки  
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  /?method=check_point_str_div_100:
    get:
      description: Получаем список тэгов по 
      parameters:
        - name: cords
          in: query
          description: Точка в формате XXX.XXX YYY.YYY ZZZ.ZZZ 
          schema:
            type: string            
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/CheckPoint'
  /?method=CheckPointUE:
    get:
      description: Получаем список тэгов по 
      parameters:
        - name: cords
          in: query
          description: Точка в формате  (X=9160.000000,Y=8340.000000,Z=0.000000) 
          schema:
            type: string            
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/CheckPoint'
  /?method=KDTreeCent:
    get:
      description: Получаем список центральных точек блоков и их ассоциация
      parameters:
        - name: block
          in: query
          description: Имя блока 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
                
  /?method=KDTreeVert:
    get:
      description: Получаем список вершин блоков  и их ассоциация
      parameters:
        - name: block
          in: query
          description: Имя блока 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  
  /?method=list_blocks:
    get:
      description: Получаем список всех загруженный блоков 
      parameters:
        - name: block
          in: query
          description: Имя блока 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlocks'
  
  /?method=LinkVert:
    get:
      description: Получаем список блоков
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  /?method=ValidBlocks:
    get:
      description: Проверка вершин блоков (занимает много времени)
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  /?method=NearestBlock:
    get:
      description: Находим ближайшей блок 
      parameters:
        - name: block
          in: query
          description: Область, в которой ищатся ближайший блоки, если не указано то глобанльно - корпуса, если GK - то отметки в GK
        - name: x
          in: query
          description: X - координата 
          schema:
            type: number
            format: double
        - name: y
          in: query
          description: Y - координата  
          schema:
            type: number
            format: double
        - name: z
          in: query
          description: Z - координата  
          schema:
            type: number
            format: double
        - name: deep
          in: query
          description: Глубина итерационного поиска по умолчанию равен единице  
          schema:
            type: number
            format: integer
        - name: all
          in: query
          description: Все входящие блоки, если не используется, то выдет первые входящие блоки  
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  /?method=NearestBlockStr:
    get:
      description: Находим ближайшей блок 
      parameters:
        - name: block
          in: query
          description: Область, в которой ищатся ближайший блоки, если не указано то глобанльно - корпуса, если GK - то отметки в GK
        - name: coords
          in: query
          description: Координаты в формате {xx.xx,yy.yy,zz.zz}
          schema:
            type: string
        - name: deep
          in: query
          description: Глубина итерационного поиска по умолчанию равен единице  
          schema:
            type: number
            format: integer
        - name: all
          in: query
          description: Все входящие блоки, если не используется, то выдет первые входящие блоки  
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  /?method=NearestBlockUE:
    get:
      description: Находим ближайший блок 
      parameters:
        - name: block
          in: query
          description: Область, в которой ищатся ближайший блоки, если не указано то глобанльно - корпуса, если GK - то отметки в GK
          schema:
            type: string     
        - name: cords
          in: query
          description: Точка в формате  (X=9160.000000,Y=8340.000000,Z=0.000000) 
          schema:
            type: string      
        - name: deep
          in: query
          description: Глубина итерационного поиска по умолчанию равен единице  
          schema:
            type: number
            format: integer
        - name: all
          in: query
          description: По умолчанию false - ищем ближайшие блок в списках блоков связанных с ближайшей точкой, true - ищем ближайший блок среди всех блоков в  области 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
                
  /?method=NearestPointToBlock:
    get:
      description: Находим ближайшую точку 
      parameters:
        - name: block
          in: query
          description: Область, в которой ищутся ближайший блоки, если не указано то глобанльно - корпуса, если GK - то отметки в GK
          schema:
            type: string     
        - name: x
          in: query
          description: X - координата 
          schema:
            type: number
            format: double
        - name: y
          in: query
          description: Y - координата  
          schema:
            type: number
            format: double
        - name: z
          in: query
          description: Z - координата  
          schema:
            type: number
            format: double
        - name: deep
          in: query
          description: Глубина итерационного поиска по умолчанию равен единице  
          schema:
            type: number
            format: integer
        - name: all
          in: query
          description: По умолчанию false - ищем ближайшие блок в списках блоков связанных с ближайшей точкой, true - ищем ближайший блок среди всех блоков в  области 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
                
  /?method=NearestPointToBlockStr:
    get:
      description: Находим ближайшую точку 
      parameters:
        - name: block
          in: query
          description: Область, в которой ищутся ближайший блоки, если не указано то глобанльно - корпуса, если GK - то отметки в GK
          schema:
            type: string     
        - name: coords
          in: query
          description: Координаты в формате {xx.xx,yy.yy,zz.zz}
          schema:
            type: string
        - name: deep
          in: query
          description: Глубина итерационного поиска по умолчанию равен единице  
          schema:
            type: number
            format: integer
        - name: all
          in: query
          description: По умолчанию false - ищем ближайшие блок в списках блоков связанных с ближайшей точкой, true - ищем ближайший блок среди всех блоков в  области 
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
      
  /?method=CalcDist:
    get:
      description: Возвращает дистанцию между двумя точками 
      parameters:
        - name: p1
          in: query
          description: Координаты первой точки в формате {xx.xx,yy.yy,zz.zz}
          schema:
            type: string
        - name: p2
          in: query
          description: Координаты второй точки в формате {xx.xx,yy.yy,zz.zz}
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
  
  /?method=isNearestBlock:
    get:
      description: Проверяет являются ли заданные блоки ближайшими 
      parameters:
        - name: bl1
          in: query
          description: имя первого блока
          schema:
            type: string
        - name: bl2
          in: query
          description: имя второго блока
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
                
  /?method=isPointNeedLink:
    get:
      description: Проверяет необходимо ли точке принадлежащей bl1 добавить связь с bl2, т.к. она находится слишком близко 
      parameters:
        - name: bl1
          in: query
          description: имя первого блока
          schema:
            type: string
        - name: bl2
          in: query
          description: имя второго блока
          schema:
            type: string
        - name: coords
          in: query
          description: Координаты в формате {xx.xx,yy.yy,zz.zz}
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Result
                type: string
                
  /?method=GetShape:
    get:
      description: Возвращает массив точек описывающих фигуру 
      parameters:
        - name: block
          in: query
          description: имя блока который необходимо описать
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShapePoints'
                
components:
  schemas:
    ShapePoints:
      title: ReturnValue
      type: object
      properties:
        error:
          type: string
        method:
          type: string
        response:
          type: array
          items:
            type: object
            properties:
              x:
                type: integer
              y:
                type: integer
              z:
                type: integer
          
    Block:
      title: ArrayOfBlocks
      type: object
      properties:
        error:
          type: string
        method:
          type: string
        response:
          type: array
          items:
            type: object
            properties:
              block_names:
                type: array
                items:
                  type: string
              battery_state:
                type: string
              le_status:
                type: string
              sn:
                type: integer
              x:
                type: integer
              y:
                type: integer
              z:
                type: integer
              all:
                type: string
    CheckPoint:
      title: Point
      type: object
      properties:
        error:
          type: string
        method:
          type: string
        response:
          type: array
          items:
            type: object
            properties:
              block_names:
                type: array
                items:
                  type: string
              x:
                type: integer
              y:
                type: integer
              z:
                type: integer
              x_c:
                type: integer
              y_c:
                type: integer
              z_c:
                type: integer
    ListBlocks:
        title: Block
        type: object
        properties:
          error:
            type: string
          method:
            type: string
          response:
            type: array
            items:
              type: object
              properties:
                Block name:
                  type: string
                TypeObject:
                  type: string
                block_names:
                  type: array
                  items:
                    type: string
                vertexes:
                  type: array
                  items:
                    type: object
                    properties:
                      x:
                        type: integer
                      y: 
                        type: integer
                      z: 
                        type: integer
                      